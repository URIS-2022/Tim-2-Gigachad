<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DokumentiService</name>
    </assembly>
    <members>
        <member name="T:DokumentiService.Controllers.DokumentController">
            <summary>
            Kontroler za entitete eksternih dokumenata.
            </summary>
        </member>
        <member name="M:DokumentiService.Controllers.DokumentController.#ctor(DokumentiService.Data.IDokumentRepository,Microsoft.AspNetCore.Routing.LinkGenerator,AutoMapper.IMapper)">
            <summary>
            Dependency injection za kontroler preko konstruktora.
            </summary>
        </member>
        <member name="M:DokumentiService.Controllers.DokumentController.GetDokumenti">
            <summary>
            GET za sva dokumenta
            </summary>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.DokumentController.GetDokument(System.Guid)">
            <summary>
            Get za dokument sa zadatim ID
            </summary>
            <param name="DokumentID"></param>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.DokumentController.DeleteDokument(System.Guid)">
            <summary>
            Delete za dokument sa zadatim ID
            </summary>
            <param name="DokumentID"></param>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.DokumentController.CreateDokument(DokumentiService.DTO.DokumentCreateDTO)">
            <summary>
            Kreira novi  doument.
            </summary>
            <param name="DokumentCreateDTO">DTO za kreiranje dokumenta.</param>
            <returns>Potvrdu o kreiranom dokumentu.</returns>
            <response code="201">Vraća kreiran dokument.</response>
            <response code="500">Došlo je do greške na serveru prilikom kreiranja dokumenta.</response>
        </member>
        <member name="M:DokumentiService.Controllers.DokumentController.UpdateDokument(DokumentiService.DTO.DokumentUpdateDTO)">
            <summary>
            Proeman dokumenta
            </summary>
            <param name="DokumentUpdateDTO"></param>
            <returns></returns>
        </member>
        <member name="T:DokumentiService.Controllers.EksterniDokumentController">
            <summary>
            Kontroler za entitete eksternih dokumenata.
            </summary>
        </member>
        <member name="M:DokumentiService.Controllers.EksterniDokumentController.#ctor(DokumentiService.Data.IEksterniDokumentRepository,Microsoft.AspNetCore.Routing.LinkGenerator,AutoMapper.IMapper)">
            <summary>
            Dependency injection za kontroler preko konstruktora.
            </summary>
        </member>
        <member name="M:DokumentiService.Controllers.EksterniDokumentController.GetEksterniDokumenti">
            <summary>
            GET za sva eksterna dokumenta
            </summary>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.EksterniDokumentController.GetEksterniDokument(System.Guid)">
            <summary>
            Get za eksterni Dokument sa zadatim ID
            </summary>
            <param name="eksterniDokumentID"></param>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.EksterniDokumentController.DeleteEksterniDokument(System.Guid)">
            <summary>
            Delete za ekterni Dokument sa zadatim ID
            </summary>
            <param name="eksterniDokumentID"></param>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.EksterniDokumentController.CreateEksterniDokument(DokumentiService.DTO.EksterniDokumentCreateDTO)">
            <summary>
            Kreira novi eksterni doument.
            </summary>
            <param name="eksterniDokumentCreateDTO">DTO za kreiranje eksternog dokumenta.</param>
            <returns>Potvrdu o kreiranom eksternom dokumentu.</returns>
            <response code="201">Vraća kreiran eksterni dokument.</response>
            <response code="500">Došlo je do greške na serveru prilikom kreiranja eksternog dokumenta.</response>
        </member>
        <member name="M:DokumentiService.Controllers.EksterniDokumentController.UpdateEksterniDokument(DokumentiService.DTO.EksterniDokumentUpdateDTO)">
            <summary>
            Promena eksternog dokumenta
            </summary>
            <param name="eksterniDokumentUpdateDTO"></param>
            <returns></returns>
        </member>
        <member name="T:DokumentiService.Controllers.InterniDokumentController">
            <summary>
            Kontroler za entitete eksternih dokumenata.
            </summary>
        </member>
        <member name="M:DokumentiService.Controllers.InterniDokumentController.#ctor(DokumentiService.Data.IInterniDokumentRepository,Microsoft.AspNetCore.Routing.LinkGenerator,AutoMapper.IMapper)">
            <summary>
            Dependency injection za kontroler preko konstruktora.
            </summary>
        </member>
        <member name="M:DokumentiService.Controllers.InterniDokumentController.GetInterniDokumenti">
            <summary>
            GET za sva interna dokumenta
            </summary>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.InterniDokumentController.GetInterniDokument(System.Guid)">
            <summary>
            GET za interni dokumetn sa zadatim ID
            </summary>
            <param name="interniDokumentID"></param>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.InterniDokumentController.DeleteInterniDokument(System.Guid)">
            <summary>
            Delete za interni Dokument sa zadatim ID
            </summary>
            <param name="interniDokumentID"></param>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.InterniDokumentController.CreateInterniiDokument(DokumentiService.DTO.InterniDokumentCreateDTO)">
            <summary>
            Dodavanje novog internog dokumenta
            </summary>
            <param name="interniDokumentCreateDTO"></param>
            <returns></returns>
        </member>
        <member name="M:DokumentiService.Controllers.InterniDokumentController.UpdateInterniDokument(DokumentiService.DTO.InterniDokumentUpdateDTO)">
            <summary>
            Promena internog Dokumenta
            </summary>
            <param name="interniDokumentUpdateDTO"></param>
            <returns></returns>
        </member>
        <member name="T:DokumentiService.Data.DokumentRepository">
            <summary>
            Repozitorijum za entitet Dokument.
            </summary>
        </member>
        <member name="M:DokumentiService.Data.DokumentRepository.#ctor(DokumentiService.Entities.DokumentContext,AutoMapper.IMapper)">
            <summary>
            Dependency injection za repozitorijum.
            </summary>
        </member>
        <member name="M:DokumentiService.Data.DokumentRepository.CreateDokument(DokumentiService.DTO.DokumentCreateDTO)">
            <summary>
            Dodaje novi dokument, koje kasnije vraća kao DTO objekat.
            </summary>
            <param name="dokumentCreateDTO">DTO za kreiranje dokumenta.</param>
            <returns>Vraća DTO kreiranog dokumenta.</returns>
        </member>
        <member name="M:DokumentiService.Data.DokumentRepository.DeleteDokument(System.Guid)">
            <summary>
            Brise zadati dokument
            </summary>
            <param name="DokumentID"></param>
        </member>
        <member name="M:DokumentiService.Data.DokumentRepository.GetDokument">
            <summary>
            Vraća listu dokumenata iz konteksta.
            </summary>
            <returns>Vraća listu dokumenata.</returns>
        </member>
        <member name="M:DokumentiService.Data.DokumentRepository.GetDokumentID(System.Guid)">
            <summary>
            Vraća jedan dokument iz konteksta na osnovu zadatog ID-ja.
            </summary>
            <param name="DokumentID">ID dokumenta.</param>
            <returns>Vraća specificiran dokument.</returns>
        </member>
        <member name="T:DokumentiService.Data.EksterniDokumentRepository">
            <summary>
            Repozitorijum za eksterni dokument Entity
            </summary>
        </member>
        <member name="M:DokumentiService.Data.EksterniDokumentRepository.CreateEksterniDokument(DokumentiService.DTO.EksterniDokumentCreateDTO)">
            <summary>
            Kreira novi eksterni Dokument
            </summary>
            <param name="eksterniDokumentCreateDTO"></param>
            <returns>Vraća DTO kreiranog dokumenta</returns>
        </member>
        <member name="M:DokumentiService.Data.EksterniDokumentRepository.DeleteEksterniDokument(System.Guid)">
            <summary>
            Brise zadati eksterni dokument
            </summary>
            <param name="EksterniDokumentID"></param>
        </member>
        <member name="M:DokumentiService.Data.EksterniDokumentRepository.GetEksterniDokument">
            <summary>
            Vraća listu eksternih dokumenata iz konteksta.
            </summary>
            <returns>Vraća listu eksternih dokumenata.</returns>
        </member>
        <member name="M:DokumentiService.Data.EksterniDokumentRepository.GetEksterniDokumentID(System.Guid)">
            <summary>
            Vraća jedan eskterni dokument iz konteksta na osnovu zadatog ID-ja.
            </summary>
            <param name="EksterniDokumentID">ID dokumenta.</param>
            <returns>Vraća specificiran eksterni dokument.</returns>
        </member>
        <member name="T:DokumentiService.Data.InterniDokumentRepository">
            <summary>
            Repozitorijum za interni dokument Entity
            </summary>
        </member>
        <member name="M:DokumentiService.Data.InterniDokumentRepository.CreateInterniDokument(DokumentiService.DTO.InterniDokumentCreateDTO)">
            <summary>
            Kreira novi interni Dokument
            </summary>
            <param name="interniDokumentCreateDTO"></param>
            <returns>Vraća DTO internog dokumenta</returns>
        </member>
        <member name="M:DokumentiService.Data.InterniDokumentRepository.DeleteInterniDokument(System.Guid)">
            <summary>
            Brise zadati interni dokument
            </summary>
            <param name="InterniDokumentID"></param>
        </member>
        <member name="M:DokumentiService.Data.InterniDokumentRepository.GetInterniDokument">
            <summary>
            Vraća listu internih dokumenata iz konteksta.
            </summary>
            <returns>Vraća listu internih dokumenata.</returns>
        </member>
        <member name="M:DokumentiService.Data.InterniDokumentRepository.GetInterniDokumentID(System.Guid)">
            <summary>
            Vraća jedan interni dokument iz konteksta na osnovu zadatog ID-ja.
            </summary>
            <param name="InterniDokumentID">ID dokumenta.</param>
            <returns>Vraća specificiran interni dokument.</returns>
        </member>
        <member name="M:DokumentiService.Entities.DokumentContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Dependency injection za konfiguraciju konekcije i opcije sa bazom.
            </summary>
        </member>
        <member name="M:DokumentiService.Entities.DokumentContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Popunjava bazu sa nekim inicijalnim podacima.
            </summary>
        </member>
        <member name="T:DokumentiService.Migrations.migration1">
            <inheritdoc />
        </member>
        <member name="M:DokumentiService.Migrations.migration1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DokumentiService.Migrations.migration1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DokumentiService.Migrations.migration1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
